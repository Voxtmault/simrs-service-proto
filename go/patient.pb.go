// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: patient.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPatientsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize    int64  `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNumber  int64  `protobuf:"varint,2,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
	MrNumber    string `protobuf:"bytes,3,opt,name=mrNumber,proto3" json:"mrNumber,omitempty"`
	PatientName string `protobuf:"bytes,4,opt,name=patientName,proto3" json:"patientName,omitempty"`
	Dob         string `protobuf:"bytes,5,opt,name=dob,proto3" json:"dob,omitempty"`
	Nik         string `protobuf:"bytes,6,opt,name=nik,proto3" json:"nik,omitempty"`
	MrStr       string `protobuf:"bytes,7,opt,name=mrStr,proto3" json:"mrStr,omitempty"`
	MotherNik   string `protobuf:"bytes,8,opt,name=motherNik,proto3" json:"motherNik,omitempty"`
	BpjsId      string `protobuf:"bytes,9,opt,name=bpjsId,proto3" json:"bpjsId,omitempty"`
	IhsNumber   string `protobuf:"bytes,10,opt,name=ihsNumber,proto3" json:"ihsNumber,omitempty"`
}

func (x *GetPatientsRequest) Reset() {
	*x = GetPatientsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsRequest) ProtoMessage() {}

func (x *GetPatientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsRequest.ProtoReflect.Descriptor instead.
func (*GetPatientsRequest) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{0}
}

func (x *GetPatientsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetPatientsRequest) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetPatientsRequest) GetMrNumber() string {
	if x != nil {
		return x.MrNumber
	}
	return ""
}

func (x *GetPatientsRequest) GetPatientName() string {
	if x != nil {
		return x.PatientName
	}
	return ""
}

func (x *GetPatientsRequest) GetDob() string {
	if x != nil {
		return x.Dob
	}
	return ""
}

func (x *GetPatientsRequest) GetNik() string {
	if x != nil {
		return x.Nik
	}
	return ""
}

func (x *GetPatientsRequest) GetMrStr() string {
	if x != nil {
		return x.MrStr
	}
	return ""
}

func (x *GetPatientsRequest) GetMotherNik() string {
	if x != nil {
		return x.MotherNik
	}
	return ""
}

func (x *GetPatientsRequest) GetBpjsId() string {
	if x != nil {
		return x.BpjsId
	}
	return ""
}

func (x *GetPatientsRequest) GetIhsNumber() string {
	if x != nil {
		return x.IhsNumber
	}
	return ""
}

type GetPatientsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message      string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ErrorMessage string         `protobuf:"bytes,3,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	Patients     []*PatientData `protobuf:"bytes,4,rep,name=patients,proto3" json:"patients,omitempty"`
}

func (x *GetPatientsResponse) Reset() {
	*x = GetPatientsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsResponse) ProtoMessage() {}

func (x *GetPatientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsResponse.ProtoReflect.Descriptor instead.
func (*GetPatientsResponse) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{1}
}

func (x *GetPatientsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPatientsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPatientsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetPatientsResponse) GetPatients() []*PatientData {
	if x != nil {
		return x.Patients
	}
	return nil
}

// Model definitions for Patient
type Insurance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MrNumber        string `protobuf:"bytes,2,opt,name=mrNumber,proto3" json:"mrNumber,omitempty"`
	InsuranceNumber string `protobuf:"bytes,3,opt,name=insuranceNumber,proto3" json:"insuranceNumber,omitempty"`
	InsuranceName   string `protobuf:"bytes,4,opt,name=insuranceName,proto3" json:"insuranceName,omitempty"`
}

func (x *Insurance) Reset() {
	*x = Insurance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Insurance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Insurance) ProtoMessage() {}

func (x *Insurance) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Insurance.ProtoReflect.Descriptor instead.
func (*Insurance) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{2}
}

func (x *Insurance) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Insurance) GetMrNumber() string {
	if x != nil {
		return x.MrNumber
	}
	return ""
}

func (x *Insurance) GetInsuranceNumber() string {
	if x != nil {
		return x.InsuranceNumber
	}
	return ""
}

func (x *Insurance) GetInsuranceName() string {
	if x != nil {
		return x.InsuranceName
	}
	return ""
}

type FamilyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MrNumber  string     `protobuf:"bytes,2,opt,name=mrNumber,proto3" json:"mrNumber,omitempty"`
	Name      string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Address   string     `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Telephone string     `protobuf:"bytes,5,opt,name=telephone,proto3" json:"telephone,omitempty"`
	Relation  *HelperVar `protobuf:"bytes,6,opt,name=relation,proto3" json:"relation,omitempty"`
}

func (x *FamilyData) Reset() {
	*x = FamilyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FamilyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamilyData) ProtoMessage() {}

func (x *FamilyData) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamilyData.ProtoReflect.Descriptor instead.
func (*FamilyData) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{3}
}

func (x *FamilyData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FamilyData) GetMrNumber() string {
	if x != nil {
		return x.MrNumber
	}
	return ""
}

func (x *FamilyData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FamilyData) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *FamilyData) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *FamilyData) GetRelation() *HelperVar {
	if x != nil {
		return x.Relation
	}
	return nil
}

type CauseOfDeath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icd_10Code string `protobuf:"bytes,1,opt,name=icd_10_code,json=icd10Code,proto3" json:"icd_10_code,omitempty"`
	Note       string `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *CauseOfDeath) Reset() {
	*x = CauseOfDeath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CauseOfDeath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CauseOfDeath) ProtoMessage() {}

func (x *CauseOfDeath) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CauseOfDeath.ProtoReflect.Descriptor instead.
func (*CauseOfDeath) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{4}
}

func (x *CauseOfDeath) GetIcd_10Code() string {
	if x != nil {
		return x.Icd_10Code
	}
	return ""
}

func (x *CauseOfDeath) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type BloodType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BloodType *HelperVar `protobuf:"bytes,1,opt,name=bloodType,proto3" json:"bloodType,omitempty"`
	Rhesus    bool       `protobuf:"varint,2,opt,name=rhesus,proto3" json:"rhesus,omitempty"`
}

func (x *BloodType) Reset() {
	*x = BloodType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BloodType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BloodType) ProtoMessage() {}

func (x *BloodType) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BloodType.ProtoReflect.Descriptor instead.
func (*BloodType) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{5}
}

func (x *BloodType) GetBloodType() *HelperVar {
	if x != nil {
		return x.BloodType
	}
	return nil
}

func (x *BloodType) GetRhesus() bool {
	if x != nil {
		return x.Rhesus
	}
	return false
}

type PatientData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatientId       uint32        `protobuf:"varint,1,opt,name=patientId,proto3" json:"patientId,omitempty"`
	MrNumber        string        `protobuf:"bytes,2,opt,name=mrNumber,proto3" json:"mrNumber,omitempty"`
	IhsNumber       string        `protobuf:"bytes,3,opt,name=ihs_number,json=ihsNumber,proto3" json:"ihs_number,omitempty"`
	Nik             string        `protobuf:"bytes,4,opt,name=nik,proto3" json:"nik,omitempty"`
	MotherNik       string        `protobuf:"bytes,5,opt,name=mother_nik,json=motherNik,proto3" json:"mother_nik,omitempty"`
	BpjsId          string        `protobuf:"bytes,6,opt,name=bpjs_id,json=bpjsId,proto3" json:"bpjs_id,omitempty"`
	Name            string        `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Dob             string        `protobuf:"bytes,8,opt,name=dob,proto3" json:"dob,omitempty"`
	Pob             string        `protobuf:"bytes,9,opt,name=pob,proto3" json:"pob,omitempty"`
	Insurances      []*Insurance  `protobuf:"bytes,10,rep,name=insurances,proto3" json:"insurances,omitempty"`
	Address         string        `protobuf:"bytes,11,opt,name=address,proto3" json:"address,omitempty"`
	Phone           string        `protobuf:"bytes,12,opt,name=phone,proto3" json:"phone,omitempty"`
	FamilyRelatives []*FamilyData `protobuf:"bytes,13,rep,name=family_relatives,json=familyRelatives,proto3" json:"family_relatives,omitempty"`
	IsDeceased      bool          `protobuf:"varint,14,opt,name=isDeceased,proto3" json:"isDeceased,omitempty"`
	TimeOfDeath     string        `protobuf:"bytes,15,opt,name=timeOfDeath,proto3" json:"timeOfDeath,omitempty"`
	CauseOfDeath    *CauseOfDeath `protobuf:"bytes,16,opt,name=causeOfDeath,proto3" json:"causeOfDeath,omitempty"`
	Accounting      *Accounting   `protobuf:"bytes,17,opt,name=accounting,proto3" json:"accounting,omitempty"`
	Gender          *HelperVar    `protobuf:"bytes,18,opt,name=gender,proto3" json:"gender,omitempty"`
	BloodType       *BloodType    `protobuf:"bytes,19,opt,name=bloodType,proto3" json:"bloodType,omitempty"`
	Religion        *HelperVar    `protobuf:"bytes,20,opt,name=religion,proto3" json:"religion,omitempty"`
	MarriageStatus  *HelperVar    `protobuf:"bytes,21,opt,name=marriageStatus,proto3" json:"marriageStatus,omitempty"`
	EducationLevel  *HelperVar    `protobuf:"bytes,22,opt,name=educationLevel,proto3" json:"educationLevel,omitempty"`
	Citizenship     *HelperVar    `protobuf:"bytes,23,opt,name=citizenship,proto3" json:"citizenship,omitempty"`
	Age             string        `protobuf:"bytes,24,opt,name=age,proto3" json:"age,omitempty"`
}

func (x *PatientData) Reset() {
	*x = PatientData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatientData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatientData) ProtoMessage() {}

func (x *PatientData) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatientData.ProtoReflect.Descriptor instead.
func (*PatientData) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{6}
}

func (x *PatientData) GetPatientId() uint32 {
	if x != nil {
		return x.PatientId
	}
	return 0
}

func (x *PatientData) GetMrNumber() string {
	if x != nil {
		return x.MrNumber
	}
	return ""
}

func (x *PatientData) GetIhsNumber() string {
	if x != nil {
		return x.IhsNumber
	}
	return ""
}

func (x *PatientData) GetNik() string {
	if x != nil {
		return x.Nik
	}
	return ""
}

func (x *PatientData) GetMotherNik() string {
	if x != nil {
		return x.MotherNik
	}
	return ""
}

func (x *PatientData) GetBpjsId() string {
	if x != nil {
		return x.BpjsId
	}
	return ""
}

func (x *PatientData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PatientData) GetDob() string {
	if x != nil {
		return x.Dob
	}
	return ""
}

func (x *PatientData) GetPob() string {
	if x != nil {
		return x.Pob
	}
	return ""
}

func (x *PatientData) GetInsurances() []*Insurance {
	if x != nil {
		return x.Insurances
	}
	return nil
}

func (x *PatientData) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PatientData) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *PatientData) GetFamilyRelatives() []*FamilyData {
	if x != nil {
		return x.FamilyRelatives
	}
	return nil
}

func (x *PatientData) GetIsDeceased() bool {
	if x != nil {
		return x.IsDeceased
	}
	return false
}

func (x *PatientData) GetTimeOfDeath() string {
	if x != nil {
		return x.TimeOfDeath
	}
	return ""
}

func (x *PatientData) GetCauseOfDeath() *CauseOfDeath {
	if x != nil {
		return x.CauseOfDeath
	}
	return nil
}

func (x *PatientData) GetAccounting() *Accounting {
	if x != nil {
		return x.Accounting
	}
	return nil
}

func (x *PatientData) GetGender() *HelperVar {
	if x != nil {
		return x.Gender
	}
	return nil
}

func (x *PatientData) GetBloodType() *BloodType {
	if x != nil {
		return x.BloodType
	}
	return nil
}

func (x *PatientData) GetReligion() *HelperVar {
	if x != nil {
		return x.Religion
	}
	return nil
}

func (x *PatientData) GetMarriageStatus() *HelperVar {
	if x != nil {
		return x.MarriageStatus
	}
	return nil
}

func (x *PatientData) GetEducationLevel() *HelperVar {
	if x != nil {
		return x.EducationLevel
	}
	return nil
}

func (x *PatientData) GetCitizenship() *HelperVar {
	if x != nil {
		return x.Citizenship
	}
	return nil
}

func (x *PatientData) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

var File_patient_proto protoreflect.FileDescriptor

var file_patient_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x73, 0x69, 0x6d, 0x72, 0x73, 0x1a, 0x0c, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x72, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x72, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x62, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x6b, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x72, 0x53,
	0x74, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x72, 0x53, 0x74, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x69, 0x6b, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x69, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x70, 0x6a, 0x73, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x70, 0x6a, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x68, 0x73, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x68, 0x73, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x97, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a,
	0x08, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x69, 0x6d, 0x72, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x87, 0x01,
	0x0a, 0x09, 0x49, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x75, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x0a, 0x46, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2c,
	0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x73, 0x69, 0x6d, 0x72, 0x73, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x56,
	0x61, 0x72, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x0c,
	0x43, 0x61, 0x75, 0x73, 0x65, 0x4f, 0x66, 0x44, 0x65, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0b,
	0x69, 0x63, 0x64, 0x5f, 0x31, 0x30, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x63, 0x64, 0x31, 0x30, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x22, 0x53, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a,
	0x09, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x73, 0x69, 0x6d, 0x72, 0x73, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x56,
	0x61, 0x72, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x68, 0x65, 0x73, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x68, 0x65, 0x73, 0x75, 0x73, 0x22, 0xf8, 0x06, 0x0a, 0x0b, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x68, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x68, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x6e, 0x69, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x6b,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x69, 0x6b, 0x12,
	0x17, 0x0a, 0x07, 0x62, 0x70, 0x6a, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x70, 0x6a, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x6f, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x62, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x6f, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6f, 0x62,
	0x12, 0x30, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x69, 0x6d, 0x72, 0x73, 0x2e, 0x49, 0x6e, 0x73,
	0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x3c, 0x0a, 0x10, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x69, 0x6d, 0x72, 0x73, 0x2e, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x65, 0x63, 0x65, 0x61, 0x73, 0x65, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x65, 0x63, 0x65, 0x61, 0x73, 0x65, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x65, 0x61, 0x74, 0x68, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x65, 0x61,
	0x74, 0x68, 0x12, 0x37, 0x0a, 0x0c, 0x63, 0x61, 0x75, 0x73, 0x65, 0x4f, 0x66, 0x44, 0x65, 0x61,
	0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x69, 0x6d, 0x72, 0x73,
	0x2e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x4f, 0x66, 0x44, 0x65, 0x61, 0x74, 0x68, 0x52, 0x0c, 0x63,
	0x61, 0x75, 0x73, 0x65, 0x4f, 0x66, 0x44, 0x65, 0x61, 0x74, 0x68, 0x12, 0x31, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x73, 0x69, 0x6d, 0x72, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x28,
	0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x69, 0x6d, 0x72, 0x73, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x56, 0x61, 0x72,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x6f,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x69,
	0x6d, 0x72, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x69,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x69, 0x6d,
	0x72, 0x73, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x56, 0x61, 0x72, 0x52, 0x08, 0x72, 0x65,
	0x6c, 0x69, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0e, 0x6d, 0x61, 0x72, 0x72, 0x69, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x69, 0x6d, 0x72, 0x73, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x56, 0x61, 0x72,
	0x52, 0x0e, 0x6d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x38, 0x0a, 0x0e, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x69, 0x6d, 0x72, 0x73,
	0x2e, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x56, 0x61, 0x72, 0x52, 0x0e, 0x65, 0x64, 0x75, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x32, 0x0a, 0x0b, 0x63, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x69, 0x6d, 0x72, 0x73, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x56, 0x61,
	0x72, 0x52, 0x0b, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x67, 0x65,
	0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_patient_proto_rawDescOnce sync.Once
	file_patient_proto_rawDescData = file_patient_proto_rawDesc
)

func file_patient_proto_rawDescGZIP() []byte {
	file_patient_proto_rawDescOnce.Do(func() {
		file_patient_proto_rawDescData = protoimpl.X.CompressGZIP(file_patient_proto_rawDescData)
	})
	return file_patient_proto_rawDescData
}

var file_patient_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_patient_proto_goTypes = []interface{}{
	(*GetPatientsRequest)(nil),  // 0: simrs.GetPatientsRequest
	(*GetPatientsResponse)(nil), // 1: simrs.GetPatientsResponse
	(*Insurance)(nil),           // 2: simrs.Insurance
	(*FamilyData)(nil),          // 3: simrs.FamilyData
	(*CauseOfDeath)(nil),        // 4: simrs.CauseOfDeath
	(*BloodType)(nil),           // 5: simrs.BloodType
	(*PatientData)(nil),         // 6: simrs.PatientData
	(*HelperVar)(nil),           // 7: simrs.HelperVar
	(*Accounting)(nil),          // 8: simrs.Accounting
}
var file_patient_proto_depIdxs = []int32{
	6,  // 0: simrs.GetPatientsResponse.patients:type_name -> simrs.PatientData
	7,  // 1: simrs.FamilyData.relation:type_name -> simrs.HelperVar
	7,  // 2: simrs.BloodType.bloodType:type_name -> simrs.HelperVar
	2,  // 3: simrs.PatientData.insurances:type_name -> simrs.Insurance
	3,  // 4: simrs.PatientData.family_relatives:type_name -> simrs.FamilyData
	4,  // 5: simrs.PatientData.causeOfDeath:type_name -> simrs.CauseOfDeath
	8,  // 6: simrs.PatientData.accounting:type_name -> simrs.Accounting
	7,  // 7: simrs.PatientData.gender:type_name -> simrs.HelperVar
	5,  // 8: simrs.PatientData.bloodType:type_name -> simrs.BloodType
	7,  // 9: simrs.PatientData.religion:type_name -> simrs.HelperVar
	7,  // 10: simrs.PatientData.marriageStatus:type_name -> simrs.HelperVar
	7,  // 11: simrs.PatientData.educationLevel:type_name -> simrs.HelperVar
	7,  // 12: simrs.PatientData.citizenship:type_name -> simrs.HelperVar
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_patient_proto_init() }
func file_patient_proto_init() {
	if File_patient_proto != nil {
		return
	}
	file_helper_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_patient_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Insurance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FamilyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CauseOfDeath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BloodType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatientData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_patient_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_patient_proto_goTypes,
		DependencyIndexes: file_patient_proto_depIdxs,
		MessageInfos:      file_patient_proto_msgTypes,
	}.Build()
	File_patient_proto = out.File
	file_patient_proto_rawDesc = nil
	file_patient_proto_goTypes = nil
	file_patient_proto_depIdxs = nil
}
